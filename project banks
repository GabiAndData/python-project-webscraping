import requests
import pandas as pd 
import sqlite3
import numpy as np
from bs4 import BeautifulSoup
from datetime import datetime

url = "https://web.archive.org/web/20230908091635 /https://en.wikipedia.org/wiki/List_of_largest_banks"
table_attribs = ["Name", "MC_USD_Billion"]
db_name =  "Banks.db"
table_name = "Largest_banks"
csv_path = "./Largest_banks_data.csv"
file_path = "./exchange_rate.csv"

def log_progress(message):
    ''' This function logs the mentioned message of a given stage of the
    code execution to a log file. Function returns nothing'''

    timestamp_format = '%Y-%h-%d-%H:%M:%S' # Year-Monthname-Day-Hour-Minute-Second 
    now = datetime.now() # get current timestamp 
    timestamp = now.strftime(timestamp_format) 
    with open("./code_log.txt","a") as f: 
        f.write(timestamp + ' : ' + message + '\n')

def extract(url, table_attribs):
    html_page = requests.get(url).text
    data = BeautifulSoup(html_page, 'html.parser')

    df = pd.DataFrame(columns=table_attribs)

    tables = data.find_all('tbody')
    rows = tables[0].find_all('tr')

    for row in rows:
        col = row.find_all('td')
        if len(col) != 0:
            name = col[1].get_text(strip=True)
            mc = col[2].get_text(strip=True)

            # Přeskočit prázdné nebo nečíselné řádky
            try:
                float(mc.replace(',', ''))
            except ValueError:
                continue  # pokud nejde převést na číslo, přeskočit

            data_dict = {"Name": name,
                         "MC_USD_Billion": mc}
            df1 = pd.DataFrame(data_dict, index=[0])
            df = pd.concat([df, df1], ignore_index=True)

    return df

def transform(df, file_path):
    ''' This function accesses the CSV file for exchange rate
    information, and adds three columns to the data frame, each
    containing the transformed version of Market Cap column to
    respective currencies'''

    rates = {}

    with open(file_path, "r") as file:
        next(file)  # Přeskočí hlavičku
        for line in file:
            currency, rate = line.strip().split(',')
            rates[currency] = float(rate)

    df["MC_USD_Billion"] = df["MC_USD_Billion"].str.replace(',', '').astype(float)

    df["MC_GBP_Billion"] = np.round(df["MC_USD_Billion"] * rates["GBP"], 2)
    df["MC_EUR_Billion"] = np.round(df["MC_USD_Billion"] * rates["EUR"], 2)
    df["MC_INR_Billion"] = np.round(df["MC_USD_Billion"] * rates["INR"], 2)

    print(df)
    return df

df = extract(url, table_attribs)
log_progress("Data extraction complete")

df = transform(df, file_path)
print(df['MC_EUR_Billion'][4])
log_progress("Currency conversion complete")
